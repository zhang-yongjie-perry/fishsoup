#upstream fishServer {  # 定义一个名为fishServer的服务器组
	#ip_hash;	# 采用IP_HASH方式
	#server 172.21.48.1:9099
	#server 192.168.2.158:9099 max_fails=1 fail_timeout=1d;  # 添加另一个服务器，权重默认为1
	#server 192.168.43.109:9099 max_fails=1 fail_timeout=1d; # 失败1次为不可用, 间隔1天后再次重试
	#server backend1.example.com weight=5;  # 添加一个服务器，并设置权重为5  
	#server backend3.example.com down;  # 将此服务器标记为down，不参与负载均衡
	#server 192.168.43.109:9099 backup;  # 将此服务器作为备份服务器
	
	# nginx_upstream_check_module的功能：开启健康检查和自动故障恢复功能
	#health_check;
	#max_fails 3;
	#fail_timeout 3s;
	
	# 配置健康检查项
	#health_check_timeout 3s;
	#health_check_interval 10s;
	#health_check_http_2xx;
	#health_check_http_3xx;
#}

# 定义变量，兼容HTTP和WebSocket两种请求协议 1.3.13以下不支持websocket
#map $http_upgrade $connection_upgrade {
#	default          keep-alive;  # 默认 keep-alive，表示HTTP协议。
#	'websocket'      upgrade;     # 若是 websocket 请求，则升级协议 upgrade。
#}

server {
	listen 80;  # 监听80端口
	listen  [::]:80;
	server_name 172.21.48.1 192.168.43.109 fishsoup.fun;

	location /api/ {
		# proxy_pass http://fishServer # 将请求转发到fishServer服务器组
		proxy_pass http://172.21.48.1:9099;
		proxy_set_header Host $host;  # 设置请求头中的Host字段为原始请求的Host
		proxy_set_header X-Real-IP $remote_addr;  # 设置请求头中的X-Real-IP字段为客户端的真实IP地址  
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 设置请求头中的X-Forwarded-For字段，以记录原始请求和代理链的IP地址  
		proxy_set_header X-Forwarded-Proto $scheme;  # 设置请求头中的X-Forwarded-Proto字段为原始请求的协议（http或https）
		rewrite ^/api/(.*)$ /fish/$1 break;
	}
	
	#location /ws/ {
		#proxy_pass http://172.21.48.1:9000;
		#proxy_http_version 1.1;
		
		#proxy_set_header Upgrade $http_upgrade;
		#proxy_set_header Connection $connection_upgrade;
		
		#proxy_set_header Host $host;
		#proxy_set_header X-Real-IP $remote_addr;
		#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		#proxy_set_header X-Forwarded-Proto $scheme;
		
		#rewrite ^/ws/(.*)$ /fish/$1 break;
	#}

	location / {
		root /usr/share/nginx/html;
		index index.html index.htm;
	}
}